{"searchDocs":[{"title":"Einf√ºhrung","type":0,"sectionRef":"#","url":"/workshop-container/docs/intro","content":"Einf√ºhrung In diesem Training wirst du die Grundlagen hinter der Containertechnologie Docker lernen. Was sind Container?Docker auf deinem Computer installierenDocker-Container ausf√ºhrenLokale Volumes in Container einbindenDocker-Container erstellenWie Netzwerken funktioniert Zus√§tzliche Unterlagen Offizielle Docker Dokumentation","keywords":"","version":"Next"},{"title":"Docker Images","type":0,"sectionRef":"#","url":"/workshop-container/docs/images","content":"Docker Images Du kannst nach auf Docker Hub verf√ºgbaren Images suchen, indem du auf den Link &quot;Explore&quot; klickst oder &quot;mariadb&quot; in das Suchfeld eingibst:https://hub.docker.com/search/?q=mariadb&amp;type=image Du erh√§ltst eine Liste mit Ergebnissen und der erste Treffer wird wahrscheinlich das offizielle Image sein: https://hub.docker.com/_/mariadb Diese Seite enth√§lt Anweisungen, wie das Image abgerufen werden kann. Lass uns das machen: docker pull mariadb Hinweis Achte auf Sicherheit! √úberpr√ºfe die Images, bevor du sie ausf√ºhrst. Ist es ein offizielles Image?Was ist in dem Image installiert? Lies das Dockerfile, das zum Erstellen des Images verwendet wurde√úberpr√ºfe das Basis-Image Nachdem ein Image heruntergeladen wurde, kannst du dann einen Container mit dem heruntergeladenen Image mit dem Unterbefehl run ausf√ºhren. Wenn ein Image nicht heruntergeladen wurde, wenn Docker mit dem Unterbefehl run ausgef√ºhrt wird, wird der Docker-Client zuerst das Image herunterladen und dann einen Container damit ausf√ºhren: docker run mariadb:latest Hinweis Hier verwenden wir das latest Tag, um die neueste Version des Images zu verwenden. Es ist jedoch eine gute Praxis, ein spezifisches Tag zu verwenden, um sicherzustellen, dass du immer die gleiche Version des Images verwendest. Um die Images zu sehen, die auf deinen Computer heruntergeladen wurden, gib ein: docker images Die Ausgabe sollte √§hnlich wie folgt aussehen: REPOSITORY TAG IMAGE ID CREATED SIZE mariadb latest 58730544b81b 2 weeks ago 397MB hello-world latest 1815c82652c0 2 months ago 1.84kB hello-world linux 1815c82652c0 2 months ago 1.84kB Der Hello-World-Container, den du im vorherigen Lab ausgef√ºhrt hast, ist ein Beispiel f√ºr einen Container, der l√§uft und beendet wird, nachdem er eine Testnachricht ausgegeben hat. Container k√∂nnen jedoch viel n√ºtzlicher sein und sie k√∂nnen interaktiv sein. Schlie√ülich sind sie √§hnlich wie virtuelle Maschinen, nur ressourcenfreundlicher. Als Beispiel f√ºhren wir einen Container mit dem neuesten Image von MariaDB aus. Die Kombination der Schalter -i und -t gibt dir interaktiven Shell-Zugriff auf den Container: docker run -it mariadb:latest Hinweis f√ºr Windows Wenn du git-bash, cmd oder powershell auf einem Windows-System verwendest, achte auf den Fehler: the input device is not a TTY. If you are using mintty, try prefixing the command with 'winpty' Setze winpty am Anfang jedes Befehls, der die -it Parameter verwendet. Zum Beispiel: winpty docker run -it mariadb:latest Ein Fehler ist aufgetaucht! 2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started. 2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql' 2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started. 2024-02-09 11:44:31+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified You need to specify one of MARIADB_ROOT_PASSWORD, MARIADB_ROOT_PASSWORD_HASH, MARIADB_ALLOW_EMPTY_ROOT_PASSWORD and MARIADB_RANDOM_ROOT_PASSWORD ü§î Warum ist dieser Fehler aufgetreten? Ist es ein Bug im Image? Alles ist in Ordnung, um dieses Image auszuf√ºhren, ist eine gewisse Konfiguration erforderlich. Lies den folgenden Auszug sorgf√§ltig durch. error: database is uninitialized and password option is not specified You need to specify one of MARIADB_ROOT_PASSWORD, MARIADB_ALLOW_EMPTY_ROOT_PASSWORD and MARIADB_RANDOM_ROOT_PASSWORD ü§î Was ist ein Image? Denke an ein Image wie an einen Bauplan, der verwendet wird, um Container zu erstellen. Ein Image ist eine Sammlung von Dateien + einigen Metadaten (oder in technischen Begriffen: diese Dateien bilden das Root-Dateisystem eines Containers)Images bestehen aus Schichten, die konzeptionell √ºbereinander gestapelt sindJede Schicht kann Dateien hinzuf√ºgen, ver√§ndern oder entfernenImages k√∂nnen Schichten teilen, um die Nutzung von Festplattenspeicher, √úbertragungszeiten und Speichernutzung zu optimierenDu baust diese Images mit Hilfe von Dockerfiles (in sp√§teren Labs)Images sind unver√§nderlich, du kannst sie nach der Erstellung nicht √§ndern ü§î Was ist der Unterschied zwischen einem Container und einem Image? Wenn du ein Image ausf√ºhrst, wird es zu einem Container. Ein Image ist ein schreibgesch√ºtztes DateisystemEin Container ist ein eingekapselter Satz von Prozessen, der in einer schreibbaren Kopie dieses Dateisystems l√§uftUm die Startzeit des Containers zu optimieren, wird statt einer regul√§ren Kopie die Technik des &quot;Copy-on-Write&quot; verwendetdocker run startet einen Container aus einem gegebenen Image","keywords":"","version":"Next"},{"title":"Umgebungsvariablen (Environment Variables)","type":0,"sectionRef":"#","url":"/workshop-container/docs/umgebungs_variablen","content":"Umgebungsvariablen (Environment Variables) Warum gab es im vorherigen Lab einen Fehler? Der MariaDB-Server kann ohne eine ordnungsgem√§√üe Konfiguration nicht ausgef√ºhrt werden. Docker kann Variablen √ºber Umgebungsvariablen in den Instantiierungsprozess einflie√üen lassen. Umgebungsvariablen werden √ºber den Parameter -e √ºbergeben, z.B.: docker run -it -e MARIADB_ROOT_PASSWORD=my-secret-pw mariadb Wenn du den Befehl ausf√ºhrst, wirst du eine Ausgabe wie diese sehen: 2024-02-09 11:59:33+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started. 2024-02-09 11:59:33+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql' 2024-02-09 11:59:34+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started. 2024-02-09 11:59:34+00:00 [Note] [Entrypoint]: Initializing database files PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER ! To do so, start the server, then issue the following command: '/usr/bin/mariadb-secure-installation' which will also give you the option of removing the test databases and anonymous user created by default. This is strongly recommended for production servers. See the MariaDB Knowledgebase at https://mariadb.com/kb Please report any problems at https://mariadb.org/jira The latest information about MariaDB is available at https://mariadb.org/. Consider joining MariaDB's strong and vibrant community: https://mariadb.org/get-involved/ 2024-02-09 11:59:34+00:00 [Note] [Entrypoint]: Database files initialized 2024-02-09 11:59:34+00:00 [Note] [Entrypoint]: Starting temporary server 2024-02-09 11:59:34+00:00 [Note] [Entrypoint]: Waiting for server startup 2024-02-09 11:59:34 0 [Note] Starting MariaDB 11.2.2-MariaDB-1:11.2.2+maria~ubu2204 source revision 929532a9426d085111c24c63de9c23cc54382259 as process 99 2024-02-09 11:59:34 0 [Note] InnoDB: Compressed tables use zlib 1.2.11 2024-02-09 11:59:34 0 [Note] InnoDB: Number of transaction pools: 1 2024-02-09 11:59:34 0 [Note] InnoDB: Using ARMv8 crc32 + pmull instructions 2024-02-09 11:59:34 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts) 2024-02-09 11:59:34 0 [Note] InnoDB: Using liburing 2024-02-09 11:59:34 0 [Note] InnoDB: Initializing buffer pool, total size = 128.000MiB, chunk size = 2.000MiB 2024-02-09 11:59:34 0 [Note] InnoDB: Completed initialization of buffer pool 2024-02-09 11:59:34 0 [Note] InnoDB: File system buffers for log disabled (block size=512 bytes) 2024-02-09 11:59:34 0 [Note] InnoDB: End of log at LSN=46300 2024-02-09 11:59:34 0 [Note] InnoDB: Opened 3 undo tablespaces 2024-02-09 11:59:34 0 [Note] InnoDB: 128 rollback segments in 3 undo tablespaces are active. 2024-02-09 11:59:34 0 [Note] InnoDB: Setting file './ibtmp1' size to 12.000MiB. Physically writing the file full; Please wait ... 2024-02-09 11:59:34 0 [Note] InnoDB: File './ibtmp1' size is now 12.000MiB. 2024-02-09 11:59:34 0 [Note] InnoDB: log sequence number 46300; transaction id 14 2024-02-09 11:59:34 0 [Note] Plugin 'FEEDBACK' is disabled. 2024-02-09 11:59:34 0 [Note] Plugin 'wsrep-provider' is disabled. 2024-02-09 11:59:34 0 [Warning] 'user' entry 'root@1a84e2e51ff2' ignored in --skip-name-resolve mode. 2024-02-09 11:59:34 0 [Warning] 'proxies_priv' entry '@% root@1a84e2e51ff2' ignored in --skip-name-resolve mode. 2024-02-09 11:59:34 0 [Note] mariadbd: Event Scheduler: Loaded 0 events 2024-02-09 11:59:34 0 [Note] mariadbd: ready for connections. Version: '11.2.2-MariaDB-1:11.2.2+maria~ubu2204' socket: '/run/mysqld/mysqld.sock' port: 0 mariadb.org binary distribution 2024-02-09 11:59:35+00:00 [Note] [Entrypoint]: Temporary server started. 2024-02-09 11:59:36+00:00 [Note] [Entrypoint]: Securing system users (equivalent to running mysql_secure_installation) 2024-02-09 11:59:36+00:00 [Note] [Entrypoint]: Stopping temporary server 2024-02-09 11:59:36 0 [Note] mariadbd (initiated by: unknown): Normal shutdown 2024-02-09 11:59:36 0 [Note] InnoDB: FTS optimize thread exiting. 2024-02-09 11:59:36 0 [Note] InnoDB: Starting shutdown... 2024-02-09 11:59:36 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool 2024-02-09 11:59:36 0 [Note] InnoDB: Buffer pool(s) dump completed at 240209 11:59:36 2024-02-09 11:59:36 0 [Note] InnoDB: Removed temporary tablespace data file: &quot;./ibtmp1&quot; 2024-02-09 11:59:36 0 [Note] InnoDB: Shutdown completed; log sequence number 47875; transaction id 15 2024-02-09 11:59:36 0 [Note] mariadbd: Shutdown complete 2024-02-09 11:59:36+00:00 [Note] [Entrypoint]: Temporary server stopped 2024-02-09 11:59:36+00:00 [Note] [Entrypoint]: MariaDB init process done. Ready for start up. 2024-02-09 11:59:36 0 [Note] Starting MariaDB 11.2.2-MariaDB-1:11.2.2+maria~ubu2204 source revision 929532a9426d085111c24c63de9c23cc54382259 as process 1 2024-02-09 11:59:36 0 [Note] InnoDB: Compressed tables use zlib 1.2.11 2024-02-09 11:59:36 0 [Note] InnoDB: Number of transaction pools: 1 2024-02-09 11:59:36 0 [Note] InnoDB: Using ARMv8 crc32 + pmull instructions 2024-02-09 11:59:36 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts) 2024-02-09 11:59:36 0 [Note] InnoDB: Using liburing 2024-02-09 11:59:36 0 [Note] InnoDB: Initializing buffer pool, total size = 128.000MiB, chunk size = 2.000MiB 2024-02-09 11:59:36 0 [Note] InnoDB: Completed initialization of buffer pool 2024-02-09 11:59:36 0 [Note] InnoDB: File system buffers for log disabled (block size=512 bytes) 2024-02-09 11:59:36 0 [Note] InnoDB: End of log at LSN=47875 2024-02-09 11:59:36 0 [Note] InnoDB: Opened 3 undo tablespaces 2024-02-09 11:59:36 0 [Note] InnoDB: 128 rollback segments in 3 undo tablespaces are active. 2024-02-09 11:59:36 0 [Note] InnoDB: Setting file './ibtmp1' size to 12.000MiB. Physically writing the file full; Please wait ... 2024-02-09 11:59:36 0 [Note] InnoDB: File './ibtmp1' size is now 12.000MiB. 2024-02-09 11:59:36 0 [Note] InnoDB: log sequence number 47875; transaction id 16 2024-02-09 11:59:36 0 [Note] Plugin 'FEEDBACK' is disabled. 2024-02-09 11:59:36 0 [Note] Plugin 'wsrep-provider' is disabled. 2024-02-09 11:59:36 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool 2024-02-09 11:59:36 0 [Note] InnoDB: Buffer pool(s) load completed at 240209 11:59:36 2024-02-09 11:59:36 0 [Note] Server socket created on IP: '0.0.0.0'. 2024-02-09 11:59:36 0 [Note] Server socket created on IP: '::'. 2024-02-09 11:59:36 0 [Note] mariadbd: Event Scheduler: Loaded 0 events 2024-02-09 11:59:36 0 [Note] mariadbd: ready for connections. Wenn du den oben genannten Befehl erneut liest, wirst du bemerken, dass wir die Argumente -it (interaktiv/terminal) verwendet haben. Und du hast vielleicht auch herausgefunden, dass mariadb nicht auf das √ºbliche CTRL-c reagiert. Wie verlassen wir also dieses Terminal? Docker hat eine Fluchttastenkombination, um sich von einem Container zu trennen und ihn laufen zu lassen. Daf√ºr musst du CTRL-p und dann CTRL-q in bash dr√ºcken. Hinweis f√ºr Windows Dies funktioniert m√∂glicherweise nicht unter Windows, da die Tastenkombinationen STRG-p und STRG-q bereits f√ºr andere Zwecke verwendet werden. Verwende docker ps in einer separaten Shell, um die Container-ID zu erhalten, und stoppe ihn dann mit docker stop &lt;container&gt;. Anschlie√üend musst du den Container mit docker start &lt;container&gt; neu starten oder einen neuen Container mit docker run -d ... gem√§ss dem Abschnitt &quot;Abgetrennte Container&quot; starten. Dies l√§sst den Container laufen, w√§hrend du wieder in deiner Shell bist. Um zu √ºberpr√ºfen, ob der Container l√§uft, verwende den folgenden Befehl: docker ps Die Ausgabe sollte √§hnlich wie folgt aussehen: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 1a84e2e51ff2 mariadb &quot;docker-entrypoint.s‚Ä¶&quot; 3 minutes ago Up 3 minutes 3306/tcp amazing_mendeleev Auf den Container zugreifen Um auf den Container zuzugreifen, verwende den folgenden Befehl: docker exec -it &lt;container&gt; bash Wo &lt;container&gt; sich auf die CONTAINER ID beziehen kann (normalerweise sind die ersten beiden Zeichen ausreichend) oder auf einen der NAMES aus der Ausgabe von docker ps. In der obigen Ausgabe w√§re dies 7cb31f821233 oder upbeat_blackwell. Hinweis Der docker exec Befehl ben√∂tigt entweder die ID oder den NAME des Containers. Zus√§tzlich braucht er am Ende ein ausf√ºhrbares Programm. In diesem Beispiel verwenden wir bash, da wir interaktiv etwas im Container ausf√ºhren m√∂chten. Sobald der Befehl ausgef√ºhrt wird, solltest du Folgendes sehen: root@1a84e2e51ff2:/# Hinweis Jedes Mal, wenn du dich mit einem Container verbindest, wirst du immer der Benutzer sein, der in der Dockerfile definiert wurde. Da wir nun im Container sind k√∂nnen wir herausfinden, ob MariaDB l√§uft: mariadb -uroot -pmy-secret-pw Falls alles korrekt eingerichtet wurde, solltest du eine Ausgabe wie diese sehen: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 4 Server version: 11.2.2-MariaDB-1:11.2.2+maria~ubu2204 mariadb.org binary distribution Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [(none)]&gt; Tippe exit; um die Verbindung zu MariaDB zu trennen und exit um den Container zu verlassen. Detached Containers Es gibt eine M√∂glichkeit, Container im Hintergrund laufen zu lassen, ohne dass sie die Shell blockieren. Daf√ºr musst du den Parameter -d verwenden, z.B.: docker run -d -e MARIADB_ROOT_PASSWORD=my-secret-pw mariadb Wenn du den Befehl ausf√ºhrst, wirst du eine Ausgabe wie diese sehen: 1a84e2e51ff2 Das ist die ID des Containers, die du verwenden kannst, um auf den Container zuzugreifen oder ihn zu stoppen. Wenn du nun alle laufenden Container sehen m√∂chtest, verwende den folgenden Befehl: docker ps Die Ausgabe sollte √§hnlich wie folgt aussehen: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 1a84e2e51ff2 mariadb &quot;docker-entrypoint.s‚Ä¶&quot; 3 minutes ago Up 3 minutes 3306/tcp amazing_mendeleev ","keywords":"","version":"Next"},{"title":"Erste Schritte","type":0,"sectionRef":"#","url":"/workshop-container/docs/erste_schritte","content":"","keywords":"","version":"Next"},{"title":"Die Kommandozeile‚Äã","type":1,"pageTitle":"Erste Schritte","url":"/workshop-container/docs/erste_schritte#die-kommandozeile","content":" Mit Docker installiert und funktionsf√§hig, ist jetzt der richtige Zeitpunkt, dich mit der Befehlszeilenanwendung vertraut zu machen. Die Verwendung von Docker besteht darin, mindestens einen Befehl zu verwenden. docker --help zeigt die verf√ºgbaren Optionen.  docker --help   Usage: docker COMMAND A self-sufficient runtime for containers Options: --config string Location of client config files (default &quot;/home/user/.docker&quot;) -D, --debug Enable debug mode --help Print usage -H, --host list Daemon socket(s) to connect to -l, --log-level string Set the logging level (&quot;debug&quot;|&quot;info&quot;|&quot;warn&quot;|&quot;error&quot;|&quot;fatal&quot;) (default &quot;info&quot;) --tls Use TLS; implied by --tlsverify --tlscacert string Trust certs signed only by this CA (default &quot;/home/user/.docker/ca.pem&quot;) --tlscert string Path to TLS certificate file (default &quot;/home/user/.docker/cert.pem&quot;) --tlskey string Path to TLS key file (default &quot;/home/user/.docker/key.pem&quot;) --tlsverify Use TLS and verify the remote -v, --version Print version information and quit Management Commands: config Manage Docker configs container Manage containers image Manage images network Manage networks node Manage Swarm nodes plugin Manage plugins secret Manage Docker secrets service Manage services stack Manage Docker stacks swarm Manage Swarm system Manage Docker volume Manage volumes Commands: attach Attach local standard input, output, and error streams to a running container build Build an image from a Dockerfile commit Create a new image from a container's changes cp Copy files/folders between a container and the local filesystem create Create a new container diff Inspect changes to files or directories on a container's filesystem events Get real time events from the server exec Run a command in a running container export Export a container's filesystem as a tar archive history Show the history of an image images List images import Import the contents from a tarball to create a filesystem image info Display system-wide information inspect Return low-level information on Docker objects kill Kill one or more running containers load Load an image from a tar archive or STDIN login Log in to a Docker registry logout Log out from a Docker registry logs Fetch the logs of a container pause Pause all processes within one or more containers port List port mappings or a specific mapping for the container ps List containers pull Pull an image or a repository from a registry push Push an image or a repository to a registry rename Rename a container restart Restart one or more containers rm Remove one or more containers rmi Remove one or more images run Run a command in a new container save Save one or more images to a tar archive (streamed to STDOUT by default) search Search the Docker Hub for images start Start one or more stopped containers stats Display a live stream of container(s) resource usage statistics stop Stop one or more running containers tag Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE top Display the running processes of a container unpause Unpause all processes within one or more containers update Update configuration of one or more containers version Show the Docker version information wait Block until one or more containers stop, then print their exit codes Run 'docker COMMAND --help' for more information on a command.   Um die f√ºr einen spezifischen Befehl verf√ºgbaren Schalter zu sehen, tippe:  docker &lt;command&gt; --help   Um systemweite Informationen √ºber Docker zu sehen, benutze:  docker info   ","version":"Next","tagName":"h2"},{"title":"Hello World (mit Docker)‚Äã","type":1,"pageTitle":"Erste Schritte","url":"/workshop-container/docs/erste_schritte#hello-world-mit-docker","content":" Docker-Container werden aus Docker-Images ausgef√ºhrt. Standardm√§√üig ziehen sie diese Images von Docker Hub, einer Docker-Registry, die von Docker Inc, dem Unternehmen hinter dem Docker-Projekt, verwaltet wird. Jeder kann seine Docker-Images auf Docker Hub erstellen und hosten, daher findest du f√ºr viele Anwendungen und Linux-Distributionen Docker-Images, die auf Docker Hub gehostet werden.  Um zu √ºberpr√ºfen, ob du auf Docker Hub zugreifen und Images herunterladen kannst, tippe:  docker run hello-world   Die Ausgabe, die Folgendes beinhalten sollte, deutet darauf hin, dass Docker korrekt zu funktionieren scheint:  Hello from Docker. This message shows that your installation appears to be working correctly. ...   ","version":"Next","tagName":"h2"},{"title":"Dein erster Container üéâ‚Äã","type":1,"pageTitle":"Erste Schritte","url":"/workshop-container/docs/erste_schritte#dein-erster-container-","content":" Mit diesem Befehl haben wir gerade unseren ersten Container auf unserem Computer ausgef√ºhrt. Er f√ºhrte einen einfachen Prozess aus, der eine Nachricht auf der Standardausgabe ausgab, der Container selbst ist jedoch nicht sehr n√ºtzlich.  Docker Dokumentation  Besuche https://docs.docker.com und mache dich mit den Dokumentationen sowie den Referenzen vertraut. In diesem Training verwenden wir Docker CE, daher k√∂nnte es auch sinnvoll sein, diesen Abschnitt in der Dokumentation zu √ºberpr√ºfen.  Frage: Muss ich den Namen des Docker Images auswendig kennen? Nein! Es gibt Unmengen von Images, die von Unternehmen, Open-Source-Projekten und Einzelpersonen bereitgestellt werden. Du kannst diese Images in verschiedenen Registries suchen, einige der bekannteren sind Docker Hub und Github Container Registry. Sieh dir das n√§chste Lab f√ºr weitere Details an. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}