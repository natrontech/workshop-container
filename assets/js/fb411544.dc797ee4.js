"use strict";(self.webpackChunkworkshop_container=self.webpackChunkworkshop_container||[]).push([[712],{8192:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var s=i(7624),r=i(2172);const d={title:"8. Wie funktioniert das Image-Building?",sidebar_position:9},t=void 0,a={id:"image_build/index",title:"8. Wie funktioniert das Image-Building?",description:"Dockerfile",source:"@site/docs/08_image_build/index.md",sourceDirName:"08_image_build",slug:"/image_build/",permalink:"/workshop-container/docs/image_build/",draft:!1,unlisted:!1,editUrl:"https://github.com/natrontech/workshop-container/tree/main/docs/08_image_build/index.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"8. Wie funktioniert das Image-Building?",sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"7. Eigener Container bereitstellen",permalink:"/workshop-container/docs/frontend_container"},next:{title:"8.1 Mehrstufiger Build",permalink:"/workshop-container/docs/image_build/08_01_multistage_build"}},l={},c=[{value:"Dockerfile",id:"dockerfile",level:2},{value:"Schreibe dein erstes Dockerfile",id:"schreibe-dein-erstes-dockerfile",level:2},{value:"Baue das Image",id:"baue-das-image",level:2},{value:"Was passiert beim Build des Images",id:"was-passiert-beim-build-des-images",level:3},{value:"Das Senden des Build-Kontexts an Docker",id:"das-senden-des-build-kontexts-an-docker",level:3},{value:"Untersuchung der Ausf\xfchrungsschritte",id:"untersuchung-der-ausf\xfchrungsschritte",level:3},{value:"Das Caching-System",id:"das-caching-system",level:3},{value:"F\xfchre es aus",id:"f\xfchre-es-aus",level:3},{value:"Die CMD-Anweisung im Dockerfile",id:"die-cmd-anweisung-im-dockerfile",level:2},{value:"Frontend-App-Image bauen",id:"frontend-app-image-bauen",level:2},{value:"Baue das python-app-Image",id:"baue-das-python-app-image",level:3},{value:"F\xfchre den python-app-Container aus",id:"f\xfchre-den-python-app-container-aus",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,s.jsxs)(n.p,{children:["Docker kann Container-Images erstellen, indem es Anweisungen aus einem sogenannten Dockerfile oder allgemeiner einem Containerfile liest.\nDie grundlegende Dokumentation dazu, wie Dockerfiles funktionieren, findest du unter ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/",children:"https://docs.docker.com/engine/reference/builder/"})}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"schreibe-dein-erstes-dockerfile",children:"Schreibe dein erstes Dockerfile"}),"\n",(0,s.jsxs)(n.p,{children:["Bevor wir unser Python-Image erweitern, werden wir uns generell anschauen, wie man ein Container-Image erstellt.\nDaf\xfcr erstelle ein neues Verzeichnis mit einem leeren ",(0,s.jsx)(n.code,{children:"Dockerfile"})," darin."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir myfirstimage\ncd myfirstimage\n"})}),"\n",(0,s.jsx)(n.p,{children:"F\xfcge den folgenden Inhalt zum Dockerfile mit deinem bevorzugten Editor hinzu:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",metastring:'title="Dockerfile"',children:"FROM ubuntu\nRUN apt-get update && \\\n    apt-get install -y figlet && \\\n    apt-get clean\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FROM"})," gibt das Basis-Image f\xfcr unseren Build an"]}),"\n",(0,s.jsxs)(n.li,{children:["Jede ",(0,s.jsx)(n.code,{children:"RUN"}),"-Zeile wird von Docker w\xe4hrend des Builds ausgef\xfchrt"]}),"\n",(0,s.jsx)(n.li,{children:"Unsere RUN-Befehle m\xfcssen nicht-interaktiv sein (keine Eingabe kann w\xe4hrend des Builds an Docker bereitgestellt werden)"}),"\n",(0,s.jsxs)(n.li,{children:["\xdcberpr\xfcfe ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/",children:"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/"})})," f\xfcr weitere Best Practices, wie man Dockerfiles schreibt."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"baue-das-image",children:"Baue das Image"}),"\n",(0,s.jsx)(n.p,{children:"F\xfchre einfach aus:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t myfirstimage .\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-t"})," gibt das Tag an, das auf das Image angewendet werden soll"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"."})," gibt den Ort des Build-Kontexts an (\xfcber den wir sp\xe4ter noch mehr sprechen werden, aber im Grunde ist es das Verzeichnis, in dem unser Dockerfile liegt)"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{title:"Hinweis",type:"info",children:[(0,s.jsxs)(n.p,{children:["Verwende den zus\xe4tzlichen Parameter ",(0,s.jsx)(n.code,{children:"--build-arg"}),", wenn du hinter einem Firmenproxy bist:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t myfirstimage --build-arg http_proxy=http://<username>:<password>@<proxy>:<port> .\n"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Bitte beachte, dass das Tag in den meisten Docker-Befehlen und Anweisungen weggelassen werden kann. In diesem Fall ist das Standard-Tag ",(0,s.jsx)(n.code,{children:"latest"}),". Abgesehen davon, dass es das Standard-Tag ist, hat ",(0,s.jsx)(n.code,{children:"latest"})," nichts Besonderes. Trotz seines Namens identifiziert es nicht notwendigerweise die neueste Version eines Images.\nJe nach Build-System kann es auf das zuletzt gepushte Image, auf das zuletzt aus einem Zweig gebaute Image oder auf ein altes Image zeigen. Es kann sogar \xfcberhaupt nicht existieren.\nAus diesem Grund solltest du niemals das Tag ",(0,s.jsx)(n.code,{children:"latest"})," in Produktion verwenden, verwende immer eine spezifische Image-Version.\nSiehe auch: ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://medium.com/@mccode/the-misunderstood-docker-tag-latest-af3babfd6375",children:"https://medium.com/@mccode/the-misunderstood-docker-tag-latest-af3babfd6375"})})]}),"\n",(0,s.jsx)(n.h3,{id:"was-passiert-beim-build-des-images",children:"Was passiert beim Build des Images"}),"\n",(0,s.jsx)(n.p,{children:"Die Ausgabe des Docker-Builds sieht folgenderma\xdfen aus:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Sending build context to Docker daemon  2.048kB\nStep 1/2 : FROM ubuntu\n ---\x3e ea4c82dcd15a\nStep 2/2 : RUN apt-get update &&     apt-get install -y figlet &&     apt-get clean\n ---\x3e b3c08112fd1c\nSuccessfully built b3c08112fd1c\nSuccessfully tagged myfirstimage:latest\n"})}),"\n",(0,s.jsx)(n.h3,{id:"das-senden-des-build-kontexts-an-docker",children:"Das Senden des Build-Kontexts an Docker"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Sending build context to Docker daemon 84.48 kB\n...\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Der Build-Kontext ist das ",(0,s.jsx)(n.code,{children:"."}),"-Verzeichnis, das an docker build \xfcbergeben wurde"]}),"\n",(0,s.jsx)(n.li,{children:"Es wird (als Archiv) vom Docker-Client an den Docker-Daemon gesendet"}),"\n",(0,s.jsx)(n.li,{children:"Dies erm\xf6glicht es dir, eine Remote-Maschine zum Bauen unter Verwendung lokaler Dateien zu verwenden"}),"\n",(0,s.jsx)(n.li,{children:"Sei vorsichtig (oder geduldig), wenn dieses Verzeichnis gro\xdf ist und deine Verbindung langsam ist"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"untersuchung-der-ausf\xfchrungsschritte",children:"Untersuchung der Ausf\xfchrungsschritte"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"...\nStep 1/2 : FROM ubuntu\n ---\x3e ea4c82dcd15a\nStep 2/2 : RUN apt-get update &&     apt-get install -y figlet &&     apt-get clean\n ---\x3e b3c08112fd1c\nSuccessfully built b3c08112fd1c\nSuccessfully tagged myfirstimage:latest\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ein Container (ea4c82dcd15a) wird aus dem Basis-Image erstellt","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Das Basis-Image wird heruntergeladen, falls es vorher nicht heruntergeladen wurde"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Der ",(0,s.jsx)(n.code,{children:"RUN"}),"-Befehl wird in diesem Container ausgef\xfchrt"]}),"\n",(0,s.jsx)(n.li,{children:"Der Container wird zu einem Image (b3c08112fd1c) committed"}),"\n",(0,s.jsx)(n.li,{children:"Der Build-Container (ea4c82dcd15a) wird entfernt"}),"\n",(0,s.jsx)(n.li,{children:"Das Ergebnis dieses Schritts wird die Basis f\xfcr den n\xe4chsten sein"}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"das-caching-system",children:"Das Caching-System"}),"\n",(0,s.jsx)(n.p,{children:"Wenn du denselben Build erneut ausf\xfchrst, wird er sofort abgeschlossen.\nWarum?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Nach jedem Build-Schritt macht Docker ein Snapshot"}),"\n",(0,s.jsx)(n.li,{children:"Bevor ein Schritt ausgef\xfchrt wird, \xfcberpr\xfcft Docker, ob es dieselbe Sequenz bereits gebaut hat"}),"\n",(0,s.jsxs)(n.li,{children:["Docker verwendet die exakten Strings, die in deinem Dockerfile definiert sind:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RUN apt-get install figlet cowsay"})," unterscheidet sich von"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"RUN apt-get install cowsay figlet"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RUN apt-get update"})," wird nicht erneut ausgef\xfchrt, wenn die Spiegel aktualisiert werden"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Alle Schritte nach einem ge\xe4nderten Schritt werden erneut ausgef\xfchrt, da das Dateisystem, auf dem sie basieren, ge\xe4ndert worden sein k\xf6nnte"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Du kannst einen Neubau mit docker build --no-cache ... erzwingen."}),"\n",(0,s.jsxs)(n.p,{children:["Wenn du nur einen teilweisen Neubau ausl\xf6sen m\xf6chtest, z.B. ",(0,s.jsx)(n.code,{children:"apt-get update"})," ausf\xfchren, um die neuesten Updates zu installieren, kannst du folgendes Muster verwenden:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"ENV REFRESHED_AT 2020-03-13\nRUN apt-get update\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Wenn du den Wert von ",(0,s.jsx)(n.code,{children:"REFRESHED_AT"})," aktualisierst, wird der Docker-Build-Cache dieses und aller folgenden Schritte invalidiert, wodurch die neuesten Updates installiert werden."]}),"\n",(0,s.jsx)(n.h3,{id:"f\xfchre-es-aus",children:"F\xfchre es aus"}),"\n",(0,s.jsx)(n.p,{children:"F\xfchre jetzt dein Image aus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -ti myfirstimage\n"})}),"\n",(0,s.jsx)(n.p,{children:"Du findest dich in einer Bash-Shell im Container wieder, f\xfchre aus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"figlet hello\n"})}),"\n",(0,s.jsx)(n.p,{children:"und du wirst folgende Ausgabe sehen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"root@00f0766080ed:/# figlet hello\n\n _          _ _\n| |__   ___| | | ___\n| '_ \\ / _ \\ | |/ _ \\\n| | | |  __/ | | (_) |\n|_| |_|\\___|_|_|\\___/\n\nroot@00f0766080ed:/#\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verlasse den Container durch Ausf\xfchren von:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"exit\n"})}),"\n",(0,s.jsx)(n.h2,{id:"die-cmd-anweisung-im-dockerfile",children:"Die CMD-Anweisung im Dockerfile"}),"\n",(0,s.jsxs)(n.p,{children:["Mit der ",(0,s.jsx)(n.code,{children:"CMD"}),"-Anweisung im Dockerfile k\xf6nnen wir den Befehl definieren, der ausgef\xfchrt wird, wenn ein Container gestartet wird."]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.p,{children:"\ud83e\udd14 Kannst du herausfinden, welche CMD-Anweisung das Ubuntu-Image hat?"})}),(0,s.jsx)("p",{children:(0,s.jsxs)(n.p,{children:["Du hast dich in einer Shell befunden, daher muss die Anweisung entweder ",(0,s.jsx)(n.code,{children:"/usr/bin/bash"})," oder ",(0,s.jsx)(n.code,{children:"/usr/bin/sh"})," sein."]})})]}),"\n",(0,s.jsx)(n.p,{children:"Modifiziere das zuvor erstellte Dockerfile wie folgt:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'FROM ubuntu\nRUN apt-get update && \\\n    apt-get install -y figlet && \\\n    apt-get clean\n\nCMD ["figlet", "hello"]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Baue das Image mit:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t myfirstimagecmd .\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Hinweis",type:"info",children:[(0,s.jsxs)(n.p,{children:["Verwende erneut den zus\xe4tzlichen Parameter ",(0,s.jsx)(n.code,{children:"--build-arg"}),", wenn du hinter einem Firmenproxy bist:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t myfirstimagecmd --build-arg http_proxy=http://<username>:<password>@<proxy>:<port> .\n"})})]}),"\n",(0,s.jsx)(n.p,{children:"Und f\xfchre es aus:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -ti myfirstimagecmd\n"})}),"\n",(0,s.jsx)(n.p,{children:"Es f\xfchrt direkt den definierten Befehl aus und gibt aus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:" _          _ _\n| |__   ___| | | ___\n| '_ \\ / _ \\ | |/ _ \\\n| | | |  __/ | | (_) |\n|_| |_|\\___|_|_|\\___/\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Weitere Informationen findest du unter ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact",children:"https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact"})}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"frontend-app-image-bauen",children:"Frontend-App-Image bauen"}),"\n",(0,s.jsx)(n.p,{children:"Nachdem wir die Grundlagen des Image-Buildings verstanden haben, m\xf6chten wir nun den Quellcode unserer Frontend-App in ein bereits erstelltes Container-Image einbinden. Dazu werden wir ein Dockerfile erstellen."}),"\n",(0,s.jsxs)(n.p,{children:["Das Basis-Image ist unser ",(0,s.jsx)(n.code,{children:"php:8-apache"}),"-Image, das wir zuvor verwendet haben. Der ",(0,s.jsx)(n.code,{children:"ADD"}),"-Befehl erm\xf6glicht es uns, Dateien aus unserem aktuellen Verzeichnis zum Docker-Image hinzuzuf\xfcgen.\nWir verwenden diesen Befehl, um den Anwendungsquellcode in das Image einzuf\xfcgen."]}),"\n",(0,s.jsx)(n.admonition,{title:"Hinweis",type:"info",children:(0,s.jsxs)(n.p,{children:["Verwende ",(0,s.jsx)(n.code,{children:".dockerignore"}),", um Dateien vom Hinzuf\xfcgen zum Container durch den Docker-Kontext auszuschlie\xdfen. Es funktioniert genauso wie ",(0,s.jsx)(n.code,{children:".gitignore"}),": ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/#dockerignore-file",children:"https://docs.docker.com/engine/reference/builder/#dockerignore-file"})})]})}),"\n",(0,s.jsxs)(n.p,{children:["Im Verzeichnis, das das Unterverzeichnis ",(0,s.jsx)(n.code,{children:"python-app"})," enth\xe4lt, erstelle ein Dockerfile mit dem folgenden Inhalt:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'FROM python:3.12-slim\n\n# Kopiert den Python-Quellcode an den korrekten Ort\nADD ./python-app/ /app/\n\n# Setzt das Arbeitsverzeichnis\nWORKDIR /app\n\n# Installiert Abh\xe4ngigkeiten\nRUN pip install -r requirements.txt\n\n# Startet die Anwendung\nCMD ["python", "app.py"]\n'})}),"\n",(0,s.jsx)(n.h3,{id:"baue-das-python-app-image",children:"Baue das python-app-Image"}),"\n",(0,s.jsx)(n.admonition,{title:"Hinweis",type:"info",children:(0,s.jsxs)(n.p,{children:["Stoppe und l\xf6sche den laufenden ",(0,s.jsx)(n.code,{children:"python-app"}),"-Container zuerst. Lasse den Datenbank-Container laufen."]})}),"\n",(0,s.jsx)(n.p,{children:"Baue nun das Image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t python-app .\n"})}),"\n",(0,s.jsx)(n.h3,{id:"f\xfchre-den-python-app-container-aus",children:"F\xfchre den python-app-Container aus"}),"\n",(0,s.jsx)(n.p,{children:"Nach einem erfolgreichen Build f\xfchre ihn aus:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -d --network container-basics-training --name python-app -p 5000:5000 python-app\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\xd6ffne nun einen Browser und navigiere zu ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"http://localhost:5000",children:"http://localhost:5000"})})," (oder in der Webshell verwende ",(0,s.jsx)(n.code,{children:"curl http://localhost:5000"}),").\nDu solltest eine Antwort erhalten, die besagt, dass die Verbindung erfolgreich hergestellt wurde."]})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>a,M:()=>t});var s=i(1504);const r={},d=s.createContext(r);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);