"use strict";(self.webpackChunkworkshop_container=self.webpackChunkworkshop_container||[]).push([[696],{5988:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Einf\xfchrung","href":"/workshop-container/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"1. Erste Schritte","href":"/workshop-container/docs/erste_schritte","docId":"erste_schritte","unlisted":false},{"type":"link","label":"2. Images","href":"/workshop-container/docs/images","docId":"images","unlisted":false},{"type":"link","label":"3. Umgebungsvariablen","href":"/workshop-container/docs/umgebungs_variablen","docId":"umgebungs_variablen","unlisted":false},{"type":"link","label":"4. Container l\xf6schen","href":"/workshop-container/docs/container_loeschen","docId":"container_loeschen","unlisted":false},{"type":"link","label":"5. Container Name","href":"/workshop-container/docs/container_name","docId":"container_name","unlisted":false},{"type":"link","label":"6. Volumes","href":"/workshop-container/docs/volumes","docId":"volumes","unlisted":false},{"type":"link","label":"7. Eigener Container bereitstellen","href":"/workshop-container/docs/frontend_container","docId":"frontend_container","unlisted":false},{"type":"category","label":"8. Wie funktioniert das Image-Building?","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"8.1 Mehrstufiger Build","href":"/workshop-container/docs/image_build/08_01_multistage_build","docId":"image_build/08_01_multistage_build","unlisted":false},{"type":"link","label":"8.2 Sicherheitsscans","href":"/workshop-container/docs/image_build/08_02_security_scanning","docId":"image_build/08_02_security_scanning","unlisted":false}],"href":"/workshop-container/docs/image_build/"},{"type":"link","label":"9. MariaDB-Container verbinden","href":"/workshop-container/docs/connect_mariadb","docId":"connect_mariadb","unlisted":false},{"type":"link","label":"10. Debugging von Containern","href":"/workshop-container/docs/debugging","docId":"debugging","unlisted":false}]},"docs":{"connect_mariadb":{"id":"connect_mariadb","title":"9. MariaDB-Container verbinden","description":"In diesem Lab erweitern wir unsere Python-Webanwendung, sodass sie auf eine MariaDB-Instanz zugreifen und Daten lesen kann. Dies erm\xf6glicht es uns, dynamische Inhalte in unserer Flask-App anzuzeigen, die aus der Datenbank abgerufen werden.","sidebar":"tutorialSidebar"},"container_loeschen":{"id":"container_loeschen","title":"4. Container l\xf6schen","description":"Es gibt zwei M\xf6glichkeiten einen Container zu l\xf6schen.","sidebar":"tutorialSidebar"},"container_name":{"id":"container_name","title":"5. Container Name","description":"Im Gegensatz zur CONTAINER ID ist der NAME etwas, das wir manipulieren k\xf6nnen. Der Name ist praktisch, nicht nur zum Starten/Verbinden/Stoppen/Zerst\xf6ren eines Containers, sondern auch f\xfcr das Networking (was wir in einem sp\xe4teren Lab sehen werden).","sidebar":"tutorialSidebar"},"debugging":{"id":"debugging","title":"10. Debugging von Containern","description":"In diesem Kapitel erlernst du effektive Techniken und Werkzeuge, um Probleme in Containern zu diagnostizieren und zu beheben. Wenn ein Container nicht wie erwartet funktioniert, bietet Docker mehrere Befehle zur Fehlersuche, mit denen du Informationen sammeln und die Ursache des Problems ermitteln kannst.","sidebar":"tutorialSidebar"},"erste_schritte":{"id":"erste_schritte","title":"1. Erste Schritte","description":"Die Kommandozeile","sidebar":"tutorialSidebar"},"frontend_container":{"id":"frontend_container","title":"7. Eigener Container bereitstellen","description":"Nachdem wir nun ein Backend haben, wie w\xe4re es, wenn wir einen Frontend-Container f\xfcr eine Python-Webanwendung bereitstellen und diese mit unserem Backend kommunizieren lassen?","sidebar":"tutorialSidebar"},"image_build/08_01_multistage_build":{"id":"image_build/08_01_multistage_build","title":"8.1 Mehrstufiger Build","description":"Multistage Builds in Docker bieten eine effiziente Methode, um leichte und optimierte Container-Images zu erstellen. Durch die Verwendung von Multistage Builds kannst du in einem einzigen Dockerfile verschiedene Build-Phasen definieren, wobei jede Phase ein eigenes Basis-Image verwenden kann. Am Ende kannst du selektiv Artefakte von einer Phase zur n\xe4chsten \xfcbertragen, was dazu f\xfchrt, dass das finale Image nur die notwendigen Abh\xe4ngigkeiten und Artefakte enth\xe4lt.","sidebar":"tutorialSidebar"},"image_build/08_02_security_scanning":{"id":"image_build/08_02_security_scanning","title":"8.2 Sicherheitsscans","description":"Viele der Container-Bilder enthalten Sicherheitsprobleme. Wenn du Bilder aus \xf6ffentlichen Registries verwenden m\xf6chtest, solltest du in der Lage sein, sie zu scannen, um zu \xfcberpr\xfcfen, ob das Bild sauber ist.","sidebar":"tutorialSidebar"},"image_build/index":{"id":"image_build/index","title":"8. Wie funktioniert das Image-Building?","description":"Dockerfile","sidebar":"tutorialSidebar"},"images":{"id":"images","title":"2. Images","description":"Du kannst nach auf Docker Hub verf\xfcgbaren Images suchen, indem du auf den Link \\"Explore\\" klickst oder \\"mariadb\\" in das Suchfeld eingibst:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Einf\xfchrung","description":"In diesem Training wirst du die Grundlagen hinter der Containertechnologie Docker lernen.","sidebar":"tutorialSidebar"},"umgebungs_variablen":{"id":"umgebungs_variablen","title":"3. Umgebungsvariablen","description":"Warum gab es im vorherigen Lab einen Fehler?","sidebar":"tutorialSidebar"},"volumes":{"id":"volumes","title":"6. Volumes","description":"\ud83e\udd14 Ich habe einen Container mit einem Datenbankserver laufen. Was passiert mit meinen Daten, wenn ich den Container entferne?","sidebar":"tutorialSidebar"}}}')}}]);