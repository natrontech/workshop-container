"use strict";(self.webpackChunkworkshop_container=self.webpackChunkworkshop_container||[]).push([[92],{3620:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var s=i(7624),r=i(2172);const t={title:"2. Images",sidebar_position:3},a="Docker Images",d={id:"images",title:"2. Images",description:'Du kannst nach auf Docker Hub verf\xfcgbaren Images suchen, indem du auf den Link "Explore" klickst oder "mariadb" in das Suchfeld eingibst:',source:"@site/docs/02_images.md",sourceDirName:".",slug:"/images",permalink:"/workshop-container/docs/images",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02_images.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"2. Images",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"1. Erste Schritte",permalink:"/workshop-container/docs/erste_schritte"}},c={},o=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"docker-images",children:"Docker Images"}),"\n",(0,s.jsxs)(n.p,{children:['Du kannst nach auf Docker Hub verf\xfcgbaren Images suchen, indem du auf den Link "Explore" klickst oder "mariadb" in das Suchfeld eingibst:\n',(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://hub.docker.com/search/?q=mariadb&type=image",children:"https://hub.docker.com/search/?q=mariadb&type=image"})})," ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(n.p,{children:["Du erh\xe4ltst eine Liste mit Ergebnissen und der erste Treffer wird wahrscheinlich das offizielle Image sein: ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://hub.docker.com/_/mariadb",children:"https://hub.docker.com/_/mariadb"})})," ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(n.p,{children:"Diese Seite enth\xe4lt Anweisungen, wie das Image abgerufen werden kann. Lass uns das machen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker pull mariadb\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Hinweis",type:"warning",children:[(0,s.jsx)(n.p,{children:"Achte auf Sicherheit! \xdcberpr\xfcfe die Images, bevor du sie ausf\xfchrst."}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ist es ein ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/docker-hub/official_images/",children:"offizielles Image"}),"?"]}),"\n",(0,s.jsxs)(n.li,{children:["Was ist in dem Image installiert?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lies das Dockerfile, das zum Erstellen des Images verwendet wurde"}),"\n",(0,s.jsx)(n.li,{children:"\xdcberpr\xfcfe das Basis-Image"}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,s.jsx)(n.p,{children:"Nachdem ein Image heruntergeladen wurde, kannst du dann einen Container mit dem heruntergeladenen Image mit dem Unterbefehl \ufeffrun ausf\xfchren. Wenn ein Image nicht heruntergeladen wurde, wenn Docker mit dem Unterbefehl \ufeffrun ausgef\xfchrt wird, wird der Docker-Client zuerst das Image herunterladen und dann einen Container damit ausf\xfchren:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run mariadb:latest\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Hinweis",type:"info",children:(0,s.jsxs)(n.p,{children:["Hier verwenden wir das ",(0,s.jsx)(n.code,{children:"latest"})," Tag, um die neueste Version des Images zu verwenden. Es ist jedoch eine gute Praxis, ein spezifisches Tag zu verwenden, um sicherzustellen, dass du immer die gleiche Version des Images verwendest."]})}),"\n",(0,s.jsx)(n.p,{children:"Um die Images zu sehen, die auf deinen Computer heruntergeladen wurden, gib ein:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker images\n"})}),"\n",(0,s.jsx)(n.p,{children:"Die Ausgabe sollte \xe4hnlich wie folgt aussehen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmariadb             latest              58730544b81b        2 weeks ago         397MB\nhello-world         latest              1815c82652c0        2 months ago        1.84kB\nhello-world         linux               1815c82652c0        2 months ago        1.84kB\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Der Hello-World-Container, den du im vorherigen Lab ausgef\xfchrt hast, ist ein Beispiel f\xfcr einen Container, der l\xe4uft und beendet wird, nachdem er eine Testnachricht ausgegeben hat. Container k\xf6nnen jedoch viel n\xfctzlicher sein und sie k\xf6nnen interaktiv sein. Schlie\xdflich sind sie \xe4hnlich wie virtuelle Maschinen, nur ressourcenfreundlicher.\nAls Beispiel f\xfchren wir einen Container mit dem neuesten Image von MariaDB aus. Die Kombination der Schalter ",(0,s.jsx)(n.code,{children:"-i"})," und ",(0,s.jsx)(n.code,{children:"-t"})," gibt dir interaktiven Shell-Zugriff auf den Container:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -it mariadb:latest\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Hinweis f\xfcr Windows",type:"info",children:[(0,s.jsx)(n.p,{children:"Wenn du git-bash, cmd oder powershell auf einem Windows-System verwendest, achte auf den Fehler:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"the input device is not a TTY.  If you are using mintty, try prefixing the command with 'winpty'\n"})}),(0,s.jsxs)(n.p,{children:["Setze ",(0,s.jsx)(n.code,{children:"winpty"})," am Anfang jedes Befehls, der die ",(0,s.jsx)(n.code,{children:"-it"})," Parameter verwendet."]}),(0,s.jsx)(n.p,{children:"Zum Beispiel:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"winpty docker run -it mariadb:latest\n"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Ein Fehler ist aufgetaucht!"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started.\n2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'\n2024-02-09 11:44:31+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2+maria~ubu2204 started.\n2024-02-09 11:44:31+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified\n        You need to specify one of MARIADB_ROOT_PASSWORD, MARIADB_ROOT_PASSWORD_HASH, MARIADB_ALLOW_EMPTY_ROOT_PASSWORD and MARIADB_RANDOM_ROOT_PASSWORD\n"})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.p,{children:"\ud83e\udd14 Warum ist dieser Fehler aufgetreten? Ist es ein Bug im Image?"})}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:"Alles ist in Ordnung, um dieses Image auszuf\xfchren, ist eine gewisse Konfiguration erforderlich. Lies den folgenden Auszug sorgf\xe4ltig durch."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"error: database is uninitialized and password option is not specified\n        You need to specify one of MARIADB_ROOT_PASSWORD, MARIADB_ALLOW_EMPTY_ROOT_PASSWORD and MARIADB_RANDOM_ROOT_PASSWORD\n"})})]})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.p,{children:"\ud83e\udd14 Was ist ein Image?"})}),(0,s.jsxs)("p",{children:[(0,s.jsxs)(n.p,{children:["Denke an ein Image wie an einen ",(0,s.jsx)(n.strong,{children:"Bauplan"}),", der verwendet wird, um Container zu erstellen."]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ein Image ist eine Sammlung von Dateien + einigen Metadaten (oder in technischen Begriffen: diese Dateien bilden das Root-Dateisystem eines Containers)"}),"\n",(0,s.jsx)(n.li,{children:"Images bestehen aus Schichten, die konzeptionell \xfcbereinander gestapelt sind"}),"\n",(0,s.jsx)(n.li,{children:"Jede Schicht kann Dateien hinzuf\xfcgen, ver\xe4ndern oder entfernen"}),"\n",(0,s.jsx)(n.li,{children:"Images k\xf6nnen Schichten teilen, um die Nutzung von Festplattenspeicher, \xdcbertragungszeiten und Speichernutzung zu optimieren"}),"\n",(0,s.jsxs)(n.li,{children:["Du baust diese Images mit Hilfe von ",(0,s.jsx)(n.strong,{children:"Dockerfiles"})," (in sp\xe4teren Labs)"]}),"\n",(0,s.jsx)(n.li,{children:"Images sind unver\xe4nderlich, du kannst sie nach der Erstellung nicht \xe4ndern"}),"\n"]})]})]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.p,{children:"\ud83e\udd14 Was ist der Unterschied zwischen einem Container und einem Image?"})}),(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:"Wenn du ein Image ausf\xfchrst, wird es zu einem Container."}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ein Image ist ein schreibgesch\xfctztes Dateisystem"}),"\n",(0,s.jsx)(n.li,{children:"Ein Container ist ein eingekapselter Satz von Prozessen, der in einer schreibbaren Kopie dieses Dateisystems l\xe4uft"}),"\n",(0,s.jsx)(n.li,{children:'Um die Startzeit des Containers zu optimieren, wird statt einer regul\xe4ren Kopie die Technik des "Copy-on-Write" verwendet'}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"docker run"})," startet einen Container aus einem gegebenen Image"]}),"\n"]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},2172:(e,n,i)=>{i.d(n,{I:()=>d,M:()=>a});var s=i(1504);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);